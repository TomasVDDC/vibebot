import { z } from "zod";

export const answerSchema = z.object({
  commentary: z.string().describe(`Describe what you're about to do and the steps you want to take for generating the fragment in great detail.`),
  title: z.string().describe("Short title of the fragment. Max 3 words."),
  file_path: z.string().describe("Relative path to the file, including the file name."),
  code: z.string().describe("Code generated by the fragment. Only runnable code is allowed."),
  // code: z.array(z.object({
  //   file_name: z.string().describe('Name of the file.'),
  //   file_path: z.string().describe('Relative path to the file, including the file name.'),
  //   file_content: z.string().describe('Content of the file.'),
  //   file_finished: z.boolean().describe('Detect if finished generating the file.'),
  // })),
  // code_finished: z.boolean().describe('Detect if finished generating the code.'),
  // error: z.string().optional().describe('Error message if the fragment is not valid.'),
});

//export type AnswerSchema = z.infer<typeof answerSchema>;
